{"version":3,"sources":["components/08-useReducer/todoReducer.jsx","components/08-useReducer/TodoListItem.jsx","components/08-useReducer/TodoList.jsx","components/08-useReducer/TodoApp.jsx","hooks/UseForm.jsx","index.jsx"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","key","className","onClick","description","TodoList","todos","i","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","initialState","reset","setValues","useState","values","handleInputChange","target","name","value","UseForm","useEffect","setItem","stringify","length","todoId","onSubmit","e","preventDefault","trim","newTodo","Date","getTime","placeholder","autoComplete","onChange","ReactDOM","render","document","getElementById"],"mappings":"4LAAaA,EAAc,WAAwB,IAAvBC,EAAsB,uDAAd,GAAGC,EAAW,uCAE9C,OAAQA,EAAOC,MACX,IAAK,MACD,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAE7B,IAAK,SACD,OAAOH,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAML,EAAOE,WAElD,IAAK,SACD,OAAOH,EAAMO,KAAI,SAAAF,GAGjB,OAAIA,EAAKC,KAAOL,EAAOE,QACnB,2BACOE,GADP,IAEIG,MAAMH,EAAKG,OAGRH,KAOf,QACI,OAAOL,I,eCNJS,EAnBM,SAAC,GAA4C,IAA3CJ,EAA0C,EAA1CA,KAAKK,EAAqC,EAArCA,MAAMC,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,aAC3C,OACK,wBACeC,IAAKR,EAAKC,GACVQ,UAAU,mBAEV,uBAAGA,UAAS,UAAKT,EAAKG,MAAQ,YAC1BO,QAAS,kBAAMH,EAAaP,EAAKC,MAGnCI,EAAQ,EAJV,KAIeL,EAAKW,aACpB,4BACID,QAAU,kBAAMJ,EAAcN,EAAKC,KACnCQ,UAAU,kBAFd,YCcTG,MAxBf,YAAsD,IAAnCC,EAAkC,EAAlCA,MAAMP,EAA4B,EAA5BA,aAAaC,EAAe,EAAfA,aAClC,OACI,6BACI,wBAAIE,UAAU,+BAENI,EAAMX,KAAK,SAACF,EAAKc,GAAN,OACZ,kBAAC,EAAD,CACAN,IAAKR,EAAKC,GACVD,KAAMA,EACNK,MAAOS,EACPR,aAAcA,EACdC,aAAcA,UCN3BQ,EAAO,WACb,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAYvCC,EAAS,WAAO,IAAD,EAEHC,qBAAW3B,EAAY,GAAGqB,GAFvB,mBAErBF,EAFqB,KAEfS,EAFe,OCnBL,WAAwB,IAAvBC,EAAsB,uDAAP,GAGjCC,EAAQ,WACVC,EAAWF,IAJ+B,EASdG,mBAASH,GATK,mBASnCI,EATmC,KAS3BF,EAT2B,KAWpCG,EAAoB,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAExBJ,EAAU,2BACHE,GADE,kBAEJE,EAAOC,KAAQD,EAAOE,UAMnC,MAAO,CAAEJ,EAAQC,EAAkBJ,GD6BaQ,CAAQ,CACpDrB,YAAY,KAhCY,mBA+BpBA,EA/BoB,KA+BpBA,YAAaiB,EA/BO,KA+BWJ,EA/BX,KAoC5BS,qBAAU,WACNf,aAAagB,QAAQ,QAAQlB,KAAKmB,UAAUtB,MAC7C,CAACA,IAoBA,OACI,yBAAKJ,UAAU,aAEf,uCAAaI,EAAMuB,OAAnB,KAEI,6BACI,yBAAK3B,UAAU,OACX,yBAAKA,UAAU,SACX,kBAAC,EAAD,CACII,MAAOA,EACPP,aA5BP,SAAC+B,GAOtBf,EALe,CACXzB,KAAK,SACLC,QAASuC,KAyBe9B,aAnBP,SAAC8B,GAMpBf,EALc,CACVzB,KAAK,SACLC,QAAQuC,QAoBM,yBAAK5B,UAAU,SACf,uCACA,6BAEA,0BAAM6B,SArEL,SAACC,GAGtB,GAFAA,EAAEC,mBAEC7B,EAAY8B,OAAOL,QAAU,GAAhC,CAIA,IAAMM,EAAU,CACZzC,IAAI,IAAI0C,MAAOC,UACfjC,cACAR,MAAK,GAOLmB,EALW,CACXzB,KAAK,MACLC,QAAQ4C,IAIRlB,OAsDoB,2BACI3B,KAAK,OACLiC,KAAK,cACLrB,UAAU,eACVoC,YAAY,oBACZC,aAAa,MACbf,MAAOpB,EACPoC,SAAUnB,IAGd,4BAAQnB,UAAU,yCAClBZ,KAAK,UADL,gBE3GxBmD,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.4c0468ba.chunk.js","sourcesContent":["export const todoReducer = (state = [],action) => {\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !==action.payload); \r\n            \r\n        case 'toggle':\r\n            return state.map(todo =>{\r\n\r\n                \r\n            if (todo.id === action.payload){\r\n                return{\r\n                    ...todo,\r\n                    done:!todo.done\r\n                }\r\n            }else {\r\n                return todo;\r\n            }\r\n\r\n\r\n            })    \r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nconst TodoListItem = ({todo,index,handleDelete,handleToggle}) => {\r\n    return (\r\n         <li \r\n                        key={todo.id}\r\n                        className=\"list-group-item\"\r\n                        >\r\n                        <p className={`${todo.done && 'complete'}`}\r\n                            onClick={() => handleToggle(todo.id)}\r\n                                    \r\n                                    \r\n                        >{index + 1}. {todo.description}</p>\r\n                        <button \r\n                            onClick={ () => handleDelete (todo.id)}\r\n                            className=\"btn btn-danger\">Borrar\r\n                        </button>\r\n                    </li>\r\n    );\r\n}\r\n\r\nexport default TodoListItem;\r\n","import React from 'react'\r\nimport TodoListItem from './TodoListItem'\r\n\r\nfunction TodoList({todos,handleDelete,handleToggle}) {\r\n    return (\r\n        <div>\r\n            <ul className=\"list-group list-group-flush\">\r\n                {\r\n                    todos.map( (todo,i)=>(\r\n                   <TodoListItem \r\n                   key={todo.id}\r\n                   todo={todo}\r\n                   index={i}\r\n                   handleDelete={handleDelete}\r\n                   handleToggle={handleToggle}\r\n                   />\r\n                                ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n\r\n}\r\n\r\nexport default TodoList\r\n\r\n","import React, { useReducer, useEffect } from 'react'\r\nimport { todoReducer } from './todoReducer';\r\n\r\n\r\nimport '../08-useReducer/styles.css'\r\nimport { UseForm } from '../../hooks/UseForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst init = ()=>{\r\nreturn JSON.parse(localStorage.getItem('todos')) || [];\r\n\r\n    // return [{\r\n    //         id: new Date().getTime(),\r\n    //         description:'aprender react',\r\n    //         done:false\r\n    //     }]\r\n        \r\n}\r\n\r\n\r\n\r\nexport const TodoApp =() => {\r\n\r\nconst [todos,dispatch] = useReducer(todoReducer,[],init);\r\n\r\n\r\n\r\n\r\n\r\nconst handleSubmit = (e) => {\r\ne.preventDefault();\r\n\r\nif(description.trim().length <= 1){\r\n    return;\r\n}\r\n\r\nconst newTodo = {\r\n    id: new Date().getTime(),\r\n    description,\r\n    done:false\r\n}\r\nconst action = {\r\n    type:'add',\r\n    payload:newTodo\r\n\r\n}\r\n    dispatch (action);\r\n    reset();\r\n}\r\n\r\n\r\n\r\nconst [{description},handleInputChange,reset] = UseForm({\r\n    description:'',\r\n\r\n})\r\n\r\nuseEffect(() => {\r\n    localStorage.setItem('todos',JSON.stringify(todos))\r\n}, [todos]);\r\n\r\nconst handleDelete = (todoId) => {\r\n\r\nconst action = {\r\n    type:'delete',\r\n    payload: todoId\r\n}\r\n\r\ndispatch (action);\r\n\r\n}\r\nconst handleToggle = (todoId) => {\r\n  const action ={\r\n      type:'toggle',\r\n      payload:todoId\r\n  }\r\n\r\n  dispatch(action);\r\n}\r\n    return (\r\n        <div className=\"container\">\r\n\r\n        <h1>TodoApp({todos.length})</h1>\r\n\r\n            <hr/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\">\r\n                        <TodoList \r\n                            todos={todos}\r\n                            handleDelete={handleDelete}\r\n                            handleToggle={handleToggle}              \r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"col-5\">\r\n                    <h4>Agregar</h4>\r\n                    <hr/>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n\r\n\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Escribe una tarea\"\r\n                            autoComplete=\"off\"\r\n                            value={description}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <button className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                        type=\"submit\"\r\n                        \r\n                        >\r\n                            Agregar\r\n                        </button>\r\n                    </form>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const UseForm = (initialState = {}) => {\r\n   \r\n\r\nconst reset = () =>{\r\n    setValues (initialState)\r\n}\r\n\r\n\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const handleInputChange = ({target})=>{\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        })\r\n\r\n    }\r\n\r\n\r\nreturn [ values, handleInputChange,reset ];\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {TodoApp} from './components/08-useReducer/TodoApp';\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}